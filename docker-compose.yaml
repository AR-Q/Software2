version: "3.9"

services:
    mysql:
        image: mysql:8.0
        container_name: mysql
        environment:
            - MYSQL_ROOT_PASSWORD=YourStrong!Passw0rd
            # You can set one default DB here, but we'll create both via init scripts below
            - MYSQL_DATABASE=bootstrap
        command:
            [
                "--default-authentication-plugin=mysql_native_password",
                "--character-set-server=utf8mb4",
                "--collation-server=utf8mb4_0900_ai_ci",
            ]
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
            - ./db/mysql-init:/docker-entrypoint-initdb.d:ro
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "mysqladmin ping -h localhost -p$$MYSQL_ROOT_PASSWORD --silent",
                ]
            interval: 10s
            timeout: 5s
            retries: 20

    redis:
        image: redis:7
        container_name: redis
        command: ["redis-server", "--appendonly", "yes"]
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data

    mongo:
        image: mongo:7
        container_name: mongo
        ports:
            - "27107:27017" # host 27107 -> container 27017 (your requested external port)
        volumes:
            - mongo_data:/data/db

    minio:
        image: minio/minio:latest
        container_name: minio
        command: server /data --console-address ":9001"
        environment:
            - MINIO_ROOT_USER=minioadmin
            - MINIO_ROOT_PASSWORD=minioadmin
        ports:
            - "9000:9000" # S3 API
            - "9001:9001" # Web console
        volumes:
            - minio_data:/data

    api-gateway:
        build:
            context: ./API-Gatewat/API-Gatewat # <â€” point at the project folder
            dockerfile: Dockerfile
        container_name: api-gateway
        environment:
            - ASPNETCORE_ENVIRONMENT=Container
            - ASPNETCORE_URLS=http://+:8080
            # hard-disable any lingering HTTPS bindings from appsettings:
            - SERVICES__IAM_URL=http://iam:8080
            - SERVICES__MEDIA_URL=http://media:8080
            - SERVICES__STORAGE_URL=http://storage:8080
        depends_on:
            - iam
            - media
        ports:
            - "5000:8080"

    iam:
        build:
            context: .
            dockerfile: IAM/IAM.Presentation/Dockerfile
        container_name: iam
        depends_on:
            - mysql
        environment:
            - ASPNETCORE_ENVIRONMENT=Container
            - ASPNETCORE_URLS=http://+:8080
            # MySQL connection (inside Docker network)
            - ConnectionStrings__Default='Server=mysql;Port=3306;Database=IAMDb;User ID=root;Password=YourStrong!Passw0rd;'
            - Redis__Configuration=redis:6379,abortConnect=false
        ports:
            - "5001:8080"

    media:
        build:
            context: .
            dockerfile: Media/Media/Dockerfile
        container_name: media
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            # MongoDB (inside network)
            - Mongo__ConnectionString=mongodb://mongo:27017
            - Mongo__Database=MediaDb
            # MinIO (S3-compatible)
            - Minio__Endpoint=http://minio:9000
            - Minio__AccessKey=minioadmin
            - Minio__SecretKey=minioadmin123
            - Minio__Bucket=media
        depends_on:
            - mongo
            - minio
        ports:
            - "5002:8080"

    storage:
        build:
            context: .
            dockerfile: StorageService/StorageService/Dockerfile
        container_name: storage
        depends_on:
            - mysql
            - minio
        environment:
            - ASPNETCORE_ENVIRONMENT=Container
            - ASPNETCORE_URLS=http://+:8080
            - ConnectionStrings__Default=Server=mysql;Port=3306;Database=StorageDb;User=root;Password=YourStrong!Passw0rd;
            - Minio__Endpoint=http://minio:9000
            - Minio__AccessKey=minioadmin
            - Minio__SecretKey=minioadmin
            - Minio__Bucket=storage
        ports:
            - "5003:8080"

volumes:
    mysql_data:
    redis_data:
    mongo_data:
    minio_data:
